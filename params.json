{"name":"nSPTiles","tagline":"Windows style tiles for SharePoint","body":"# nSPTiles\r\n\r\nhttp://nsptiles.js.org || http://imthenachoman.github.io/nSPTiles/\r\n\r\n**nSPTiles** is an easy to use JavaScript library for Windows style live tiles for SharePoint with numerous styling options and an admin GUI.\r\n\r\n![screenshot](https://cloud.githubusercontent.com/assets/83817/8892362/e50bd494-3322-11e5-9b36-fb0aebf98a1d.PNG)\r\n\r\n## Table of Contents\r\n\r\n 1. [Overview](#overview)\r\n\t 2. [How It Works](#how-it-works)\r\n\t 3. [Features](#features)\r\n\t 4. [Screenshots](#screenshots)\r\n 5. [How To Use](#how-to-use)\r\n\t 6. [Use A CEWP To Render Tiles](#use-a-cewp-to-render-tiles)\r\n\t 7. [CEWP JavaScript Reference](#cewp-javascript-reference)\r\n\t 8. [GUI](#gui)\r\n\t 9. [Use a DVWP To Render Tiles](#use-a-dvwp-to-render-tiles)\r\n\t 10. [DVWP Paramater Reference](#dvwp-paramater-reference)\r\n\t 11. [nSPTiles List Reference](#nsptiles-list-reference)\r\n 11. [Compatibility](#compatibility)\r\n 12. [Change Log](#change-log)\r\n 13. [Support / Issues / Contact / Help](#support--issues--contact--help)\r\n 14. [References, Acknowledgement, and Gratitude](#references-acknowledgement-and-gratitude)\r\n 15. [License](#license)\r\n\r\n## Overview\r\n\r\nYou know those live tiles that Windows 8 has? **nSPTiles** is a library that lets you create something like them in SharePoint.\r\n\r\n**nSPTiles** is my my own version of (and wouldn't have been possible without) [SPJS-Tiles](http://spjsblog.com/2013/11/13/sharepoint-2013-style-tiles/ \"SPJS-Tiles\") by [Alexander Bautz](http://spjsblog.com/about/ \"about Alexander Bautz\"). You can find his at http://spjsblog.com/2013/11/13/sharepoint-2013-style-tiles/.\r\n\r\nAfter I started using [SPJS-Tiles](http://spjsblog.com/2013/11/13/sharepoint-2013-style-tiles/) more and more I had a need for some enhancements and additional features -- specifically a DVWP way to render the tiles so they load faster. And so I set out to address my needs and ended up with **nSPTiles**.\r\n\r\n### How It Works\r\n\r\nThe first time you use **nSPTiles** a SharePoint list is created. The list will be used to hold the tile data. It has numerous fields/columns for the various tile options/settings. There are also numerous calculated columns that are used internally by **nSPTiles**.\r\n\r\nAfter the list is created you can add items to the list. Each item in the list is a different tile. Tiles can be grouped by using the same [`group name`](#groupName). This way you can render different tiles on different pages/sections.\r\n\r\n***It is important that you do not change any of the list settings,       especially the calculated columns.***\r\n\r\n### Features\r\n\r\n - **nSPTiles** is self-contained and does not need any additional JavaScript libraries like jQuery\r\n - uses SharePoint's built-in list system\r\n - [GUI](#gui) to help with tile placement\r\n - [CEWP/JavaScript](#use-a-cewp-to-render-tiles) or [DVWP](#use-a-dvwp-to-render-tiles) for rendering\r\n - each tile can [have](#nsptiles-list-reference):\r\n  - a link\r\n  - a background color\r\n  - a tile image\r\n  - a [Font-Awesome](http://fortawesome.github.io/Font-Awesome/ \"Font-Awesome\") icon (*requires FA be [configured](http://fortawesome.github.io/Font-Awesome/get-started/))\r\n  - a tile heading\r\n  - slider text that slides up on hover\r\n  - different color/image/FA/heading when the mouse is over a tile (hovering)\r\n - quickly specify [placement](#position) for tile image, Font-Awesome icon, heading text and slider text without custom CSS\r\n - numerous pre-set styling options\r\n - additional styling can be applied with custom CSS\r\n - three tile [animation](#animationTypeOn) options (slide, bounce and elastic)\r\n\r\n### Screenshots\r\n\r\nScreenshot | Description\r\n--- | ---\r\n<img src=\"https://cloud.githubusercontent.com/assets/83817/8887698/8747710a-325b-11e5-8107-1c97315c14d6.PNG\" width=\"150px\"> | On first use **nSPTiles** will ask you to create the list used to store all tile data.\r\n<img src=\"https://cloud.githubusercontent.com/assets/83817/8887699/87487b86-325b-11e5-86fb-1e2d93ccbedd.PNG\" width=\"150px\"> | The list has been created.\r\n<img src=\"https://cloud.githubusercontent.com/assets/83817/8887700/874a9c2c-325b-11e5-870f-3b0ba78ded20.PNG\" width=\"150px\"> | If you have access to add items to the list then when you hover your mouse over the tiles it will let you use a GUI to add, move, edit or delete tiles.\r\n<img src=\"https://cloud.githubusercontent.com/assets/83817/8887701/874d7384-325b-11e5-8ffc-b62adec148f1.PNG\" width=\"150px\"\"> | The GUI to add a new tile...\r\n<img src=\"https://cloud.githubusercontent.com/assets/83817/8887703/87503a2e-325b-11e5-9a0f-6367595cd56d.PNG\" width=\"150px\"> | The GUI to add a new tile...\r\n<img src=\"https://cloud.githubusercontent.com/assets/83817/8887702/874fb6c6-325b-11e5-89d0-5f00b31ce54b.PNG\" width=\"150px\"> | The added tile.\r\n\r\n## How To Use\r\n\r\nThese instructions assume you know your way around SharePoint (how to upload files and edit them, add CEWPs or DVWPs and edit their configuration options, call JavaScript functions, etc...)\r\n\r\nThe very first time you use **nSPTiles** follow the [CEWP](#use-a-cewp-to-render-tiles) instructions.\r\n\r\n### Use A CEWP To Render Tiles\r\n\r\n\\*\\*\\* *If this is the first time you're using* ***nSPTiles*** *then download this [`zip file`](https://github.com/imthenachoman/nSPTiles/zipball/master) and upload `nSPTiles.1.0.min.js` it to a document library in your SharePoint site. You'll need to know the path to the file later.* \\*\\*\\*\r\n\r\nUsing a CEWP uses client-side JavaScript to pull information from the `nSPTiles` list using SharePoint's REST API. The code is configured to run on page load which means the tiles will be visible before the page is drawn, however, it does add a slight delay to the page load.\r\n\r\n 1. add a CEWP to a WebPart page and add code like below (either directly in the CEWP source code editor or link to an HTML file)\r\n\r\n    ```html\r\n    <script src=\"nSPTiles.1.0.min.js\" type=\"text/javascript\"></script>\r\n    <link rel=\"stylesheet\" href=\"font-awesome.min.css\">\r\n    <div id=\"nachoTiles\"></div>\r\n    <script type=\"text/javascript\">\r\n        nSPTiles.init(\"nachoTiles\", \"group one\");\r\n    </script>\r\n    ```\r\n 2. make sure to provide the correct path to `nSPTiles.1.0.min.js`\r\n 3. (*optional*) update the path to the Font-Awesome CSS if you want to use Font-Awesome\r\n 4. update the `id` of the `div` where you want the tiles to be rendered in (`nachoTiles` in the above example)\r\n 5. in the `nSPTiles.init` call update the parameters as necessary (check [below](#cewp-javascript-reference) for details)\r\n 6. save everything and reload the page\r\n\r\n\\*\\*\\* *The first time you use* ***nSPTiles*** *you will see a message like this. Follow the instructions to create the `nSPTiles` list.* \\*\\*\\*\r\n\r\n![enter image description here](https://cloud.githubusercontent.com/assets/83817/8887698/8747710a-325b-11e5-8107-1c97315c14d6.PNG)\r\n\r\nNow you can use the [GUI](#gui) to add/move/edit/delete tiles.\r\n\r\n### CEWP JavaScript Reference\r\n\r\nThe `nSPTiles.init` function takes three parameters:\r\n\r\n    nSPTiles.init(ID, groupName)\r\n \r\n -- OR --\r\n \r\n     nSPTiles.init(ID, groupName, configOptions)\r\n\r\nParamater Reference:\r\n\r\nparameter | required | explanation\r\n--- | --- | ---\r\n`ID` | yes | the ID of the `div` where you want the tiles to be created\r\n`groupName` | yes | the name of the tiles group to use\r\n`configOptions` | optional | a configuration object with the following options:<br /><br /><table><tbody><tr><th>animationTime</th><td>number</td><td>the number of milliseconds tile animations should take</td></tr><tr><th><a name=\"animationTypeOn\"></a>animationTypeOn</th><td>string</td><td>the type of animation to use when the mouse enters a tile (for [zooming](#zoom) and sliding); options are:<br /><br /><ul><li>slide</li><li>bounce</li><li>elastic</li></ul></td></tr><tr><th>animationTypeOff</th><td>string</td><td>the type of animation to use when the mouse leaves a tile; same options as above</td></tr></tbody></table>\r\n\r\nExamples:\r\n\r\n    nSPTiles.init(\"nachoTiles\", \"group 1\", {animationTime: 250});\r\n    nSPTiles.init(\"nachoTiles\", \"group 2\", {animationTypeOn: \"bounce\"});\r\n    nSPTiles.init(\"nachoTiles\", \"group 3\", {animationTypeOff: \"slide\"});\r\n    nSPTiles.init(\"nachoTiles\", \"group 4\", {\r\n\t    animationTime: 250,\r\n\t    animationTypeOn: \"bounce\",\r\n\t    animationTypeOff: \"elastic\"\r\n    });\r\n\r\n### GUI\r\n\r\nIf you have permissions to add items to the `nSPTiles` list then when you hover over the area where the tiles are (or should/would be) then you'll see admin links that will let you **add**, **move**, **edit**, or **delete** tiles. The **add** and **move** options will let you use a GUI to draw where you want the tile to be within the container. The **move**, **edit**, and **delete** options will let you select a tile you want to work on.\r\n\r\n![enter image description here](https://cloud.githubusercontent.com/assets/83817/8887700/874a9c2c-325b-11e5-870f-3b0ba78ded20.PNG)\r\n\r\n### Use a DVWP To Render Tiles\r\n\r\n\\*\\*\\*\\*\\*\\* **IMPORTANT** \\*\\*\\*\\*\\*\\*\r\n\r\n**DO NOT add the DVWP WebPart to a page until [you've used a CEWP](#use-a-cewp-to-render-tiles) at least once so the `nSPTiles` list has been created.**\r\n\r\n\\*\\*\\*\\*\\*\\* **IMPORTANT** \\*\\*\\*\\*\\*\\*\r\n\r\nWith a DVWP SharePoint pulls the tile data on the server side in an XML format, before it it send to the browser, and my XSL transforms it into the necessary HTML. Because it is done server-side the page load should be slightl faster.\r\n\r\nUsing a DVWP uses JavaScript to pull information from the `nSPTiles` list using SharePoint's REST API. The code is configured to run on page load which means the tiles will be visible before the page is drawn, however, it does add a slight delay to the page load.\r\n\r\n 1. add a WebPart to the page like you normally would\r\n 2. in the section where you would select a WebPart to add upload the `nSPTiles.1.0.webpart` file (from the zip file you downloaded earlier) and add it to the page (after it uploads you may have to go back to the add a WebPart wizard)\r\n 3. edit the `nSPTiles` webpart and under `Parameters Editor` change the `DefaultValue` for each line:\r\n\r\n    ```xml\r\n    <ParameterBinding Name=\"nSPTilesJSPath\" Location=\"None\" DefaultValue=\"nSPTiles.1.0.min.js\"/>\r\n    <ParameterBinding Name=\"FontAwesomeCSSPath\" Location=\"None\" DefaultValue=\"font-awesome.min.css\"/>\r\n    <ParameterBinding Name=\"GroupName\" Location=\"None\" DefaultValue=\"group one\"/>\r\n    <ParameterBinding Name=\"AnimationSpeedInMillisecond\" Location=\"None\" DefaultValue=\"100\"/>\r\n    <ParameterBinding Name=\"AnimationTypeOn\" Location=\"None\" DefaultValue=\"slide\"/>\r\n    <ParameterBinding Name=\"AnimationTypeOff\" Location=\"None\" DefaultValue=\"bounce\"/>\r\n    ```\r\n\r\nNow you can use the [GUI](#gui) to add/move/edit/delete tiles.\r\n\r\n### DVWP Paramater Reference\r\n\r\nparameter name | required | explanation\r\n--- | --- | ---\r\nnSPTilesJSPath | yes | the path to `nSPTiles.1.0.min.js`\r\nFontAwesomeCSSPath | optional | the path to the Font-Awesome CSS\r\nGroupName | yes | the name of the tiles group to use\r\nAnimationSpeedInMillisecond | optional | the number of milliseconds tile animations should take\r\nAnimationTypeOn | optional | the type of animation to use when the mouse enters a tile; check [above](#animationTypeOn) for options\r\nAnimationTypeOff | optional | the type of animation to use when the mouse enters a tile; check [above](#animationTypeOn) for options\r\n\r\n### nSPTiles List Reference\r\n\r\nHere are all the tile options and what they mean. Each one maps to a column/field in the `nSPTiles` list. Not all fields are required and not all fields are relevant depending on other settings.\r\n\r\noption (field/column name) | description\r\n--- | ---\r\n<a name=\"groupName\">group name</a> | group this tile belongs to\r\nactive | inactive tiles are not rendered\r\ntile custom ID | lets you override the default tile ID of \"nTile_ID\" where ID is the ID of item in the list\r\ntile custom class(es) | if you want to add custom classes to the main `div` of the tile\r\ntile width | width of the tile in pixels\r\ntile height | height of the tile in pixels\r\ntile left offset | how far from the left the tile should be in pixels\r\ntile top offset | how far from the top the tile should be in pixels\r\ntile border width | if you want an empty gap/white-space beteween tiles\r\ntile zoom on hover | <a name=\"zoom\">zoom</a> effect for the tile by temporarilly making the tile border width 0 when the mouse is over the tile \r\ntile background color | background color for the tile (check [here](#color) for details)\r\ntile background opacity | opacity for the background\r\ntile background color on hover | same as above but for when the mouse is over the tile\r\ntile background opacity on hover | same as above but for when the mouse is over the tile\r\ntile image URL | URL of an image to show on the tile\r\ntile image opacity | opacity for the tile image\r\ntile image URL on hover | same as above but for when the mouse is over the tile\r\ntile image opacity on hover | same as above but for when the mouse is over the tile\r\ntile image position | placement for the image within the tile (check [here](#position) for details)\r\ntile image width | width of the image\r\ntile image height | height of the image in pixels\r\ntile image padding | padding for the image in pixels\r\ntile FA class | Font-Awesome icon to use (check http://fortawesome.github.io/Font-Awesome/icons/ for details)\r\ntile FA color | color to use for the Font-Awesome icon (check [here](#color) for details)\r\ntile FA style | style to apply to the Font-Awesome icon\r\ntile FA opacity | opacity for the Font-Awesome icon\r\ntile FA class on hover | same as above but for when the mouse is over the tile\r\ntile FA color on hover | same as above but for when the mouse is over the tile\r\ntile FA style on hover | same as above but for when the mouse is over the tile\r\ntile FA opacity on hover | same as above but for when the mouse is over the tile\r\ntile FA position | placement for the Font-Awesome icon within the tile (check [here](#position) for details)\r\ntile FA padding | padding for the Font-Awesome icon\r\ntile link type | type of link to make the tile:<br /><br /><table><tr><th>none</th><td>no link</td></tr><tr><th>current window</th><td>link will open in the current page</td></tr><tr><th>new window</th><td>link will open in a new window</td></tr><tr><th>dialog</th><td>link will open in a SharePoint 2010 dialog</td></tr><tr><th>dialog (refresh window after save)</th><td>link will open in a SharePoint 2010 dialog and the entire page will be reloaded if a save is done in the dialog</td></tr><tr><th>dialog (refresh tiles after save)</th><td>link will open in a SharePoint 2010 dialog and just the tiles will be reloaded if a save is done in the dialog</td></tr></table>\r\ntile Link URL | URL for the link\r\nis heading | heading tiles have no slider\r\nheading content | text content to use for the tile or slider heading (can use HTML)\r\nheading font color | heading font color (check [here](#color) for details)\r\nheading content on hover | same as above but for when the mouse is over the tile\r\nheading font color on hover | same as above but for when the mouse is over the tile\r\nheading position | placement of the heading content within the tile (check [here](#position) for details)\r\nheading padding | padding for the heading\r\nheading font size | font size for the heading\r\nbold heading | should the heading be bolded\r\nheading style | additional/custom styles to apply to the heading\r\nslider heading height | how tall/high do you want the slider to 'peak' from the bottom of the tile\r\ntile image and FA slider heading push | for non-heading tiles, if the tile image or tile Font-Awesome icon are placed on the bottom then should they be pushed up so they are on top of the slider heading\r\nslider body content | text content to use for the slider body (can use HTML)\r\nslider body position | placement of the slider body content within the slider (check [here](#position) for details)\r\nslider body padding | padding for the slider content\r\nslider body font size | font size for the slider content\r\nslider body font color | slider content font color (check [here](#color) for details)\r\nslider body style | additional/custom styles to apply to the slider content\r\nslider background color | background color to use for the slider (check [here](#color) for details)\r\nslider background opacity | opacity for the slider background\r\nslider background color on hover | same as above but for when the mouse is over the tile\r\nslider background opacity on hover | same as above but for when the mouse is over the tile \r\n\r\n<a name=\"position\">**Position Options**</a>\r\n\r\nThe various options that have a related position option allow you to have control of placement within the tile. The choices are:\r\n\r\n - top left\r\n - top center\r\n - top right\r\n - middle left\r\n - middle center\r\n - middle right\r\n - bottom left\r\n - bottom center\r\n - bottom right\r\n\r\n<a name=\"color\">**Color Options**</a>\r\n\r\nFor the various options that have a color option you can specify a color using an HTML/CSS friendly color name or a CSS class name prefixed with a `.`.\r\n\r\nUsing a class name makes it easier if you have pre-defined CSS classes in a style-sheet with the colors you want. Keep in mind CSS class definitions that apply other non-color settings could have undesirable effects.\r\n\r\nExamples:\r\n\r\n - `#ff00ff`, `#f0f0f0`\r\n - `#f0f`, `#ff0`\r\n - `rgb(0, 100, 200)`\r\n - `yellow`\r\n - `.themeColor1`, `.themeColor2`, `.themeColor2` (notice the `.` before the class name)\r\n\r\n## Compatibility\r\n\r\nI have tested **nSPTiles** in the following environments as these are all I have access to.\r\n\r\nSharePoint Version | IE | Chrome | FireFox\r\n--- | --- | --- | ---\r\n2010 Foundation | IE 11 | Chrome 44 | Firefox 39\r\n2010 Server | IE 11 | Chrome 44 | -\r\n\r\nIf anyone is able to test on other SharePoint installations and/or browsers I would appreciate feedback.\r\n\r\n### Change Log\r\n\r\nversion | updates\r\n--- | ---\r\n1.0 | initial release\r\n\r\n### Support / Issues / Contact / Help\r\n\r\nIf you are familiar with [GitHub](https://github.com) and know how to submit issues then please do so at https://github.com/imthenachoman/nSPTiles/issues. Or if you prefer you can e-mail me at imthenachoman (at) gmail (dot) com\r\n\r\n### References, Acknowledgement, and Gratitude\r\n\r\n - [SPJS-Tiles](http://spjsblog.com/2013/11/13/sharepoint-2013-style-tiles/ \"SPJS-Tiles\") (http://spjsblog.com/2013/11/13/sharepoint-2013-style-tiles/) by [Alexander Bautz](http://spjsblog.com/about/ \"about Alexander Bautz\") for creating the original tiling system for SharePoint\r\n - [cross-browser requestAnimationFrame](https://gist.github.com/paulirish/1579671) (https://gist.github.com/paulirish/1579671) by Erik Möller\r\n - [generic animation using requestAnimationFrame](http://www.sitepoint.com/simple-animations-using-requestanimationframe/) (http://www.sitepoint.com/simple-animations-using-requestanimationframe/) by Dmitri Lau\r\n - [jQuery's easing functions](https://github.com/danro/jquery-easing/blob/master/jquery.easing.js) (https://github.com/danro/jquery-easing/blob/master/jquery.easing.js) by George McGinley Smith\r\n\r\n### License\r\n\r\n[MIT License](https://github.com/imthenachoman/nSPTiles/blob/master/LICENSE) -  https://github.com/imthenachoman/nSPTiles/blob/master/LICENSE\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}